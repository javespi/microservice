# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    # App\:
    #    resource: '../src/*'
    #    exclude: '../src/{DependencyInjection,Domain,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Microservice\Infrastructure\Controller\Query\:
        resource: '../../Controller/Query'
        tags: ['controller.service_arguments']
        arguments:
            - '@tactician.commandbus.query'

    Microservice\Infrastructure\Controller\Command\:
        resource: '../../Controller/Command'
        tags: ['controller.service_arguments']
        arguments:
            - '@tactician.commandbus.command'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Microservice\Application\QueryHandler\:
        resource: '../../../Application/QueryHandler'
        tags:
            - {name: 'tactician.handler', typehints: true}

    Microservice\Application\CommandHandler\:
        resource: '../../../Application/CommandHandler'
        tags:
            - {name: 'tactician.handler', typehints: true}

    Microservice\Domain\User\InMemoryUserRepository: ~
    Microservice\Infrastructure\Repository\Doctrine\DoctrineUserRepository:
        arguments:
            - '@doctrine.dbal.microservice_connection'

    Microservice\Domain\User\UserRepository:
        alias: Microservice\Infrastructure\Repository\Doctrine\DoctrineUserRepository

    Microservice\Infrastructure\Consumer\Amqp\:
        resource: '../../Consumer/Amqp'

    Microservice\Infrastructure\Middleware\Amqp\:
        resource: '../../Middleware/Amqp'

    PhpAmqpLib\Connection\AMQPConnection:
        arguments:
            - aragorn
            - 5672
            - 'guest'
            - 'guest'

    PhpAmqpLib\Channel\AMQPChannel:
        factory:
            - '@PhpAmqpLib\Connection\AMQPConnection'
            - channel

    Microservice\Infrastructure\Consumer\Amqp\CommandConsumer:
        arguments:
            - '@PhpAmqpLib\Channel\AMQPChannel'
            - '@tactician.commandbus.async_command'
        tags:
          { name: 'console.command', command: 'command_consumer' }